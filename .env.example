# Since the ".env" file is gitignored, you can use the ".env.example" file to
# build a new ".env" file when you clone the repo. Keep this file up-to-date
# when you add new variables to `.env`.

# This file will be committed to version control, so make sure not to have any
# secrets in it. If you are cloning this repo, create a copy of this file named
# ".env" and populate it with your secrets.

# When adding additional environment variables, the schema in "/src/env.js"
# should be updated accordingly.

# Next Auth
# You can generate a new secret on the command line with:
# npx auth secret
# https://next-auth.js.org/configuration/options#secret
AUTH_SECRET=""

# NextAuth URL - Set this in production
# NEXTAUTH_URL="https://yourdomain.com"
# For development, NextAuth will use http://localhost:3000 automatically

# Next Auth Discord Provider (Optional)
# Leave these empty to use the development credentials provider instead
AUTH_DISCORD_ID=""
AUTH_DISCORD_SECRET=""

# Next Auth Google Provider (Optional)
# Get these from https://console.cloud.google.com/
# 1. Go to APIs & Services -> Credentials
# 2. Create credentials -> OAuth client ID -> Web application
# 3. Add authorized redirect URIs:
#    - http://localhost:3000/api/auth/callback/google (for development)
#    - https://yourdomain.com/api/auth/callback/google (for production)
# 4. Copy Client ID and Client Secret below
AUTH_GOOGLE_ID=""
AUTH_GOOGLE_SECRET=""

# Prisma
# https://www.prisma.io/docs/reference/database-reference/connection-urls#env
DATABASE_URL="postgresql://postgres:password@localhost:5432/fast-saas-template"

# Email Configuration
# Default sender email address
EMAIL_FROM="noreply@yourdomain.com"
EMAIL_FROM_NAME="Your App Name"

# AWS SES Configuration (Optional)
# Leave empty to use console email provider in development
# AWS SES requires domain verification in production
AWS_SES_REGION="us-east-1"
AWS_ACCESS_KEY_ID=""
AWS_SECRET_ACCESS_KEY=""

# App URL - Required for email verification links
# In development, this defaults to http://localhost:3000
NEXTAUTH_URL="http://localhost:3000"

# File Storage Configuration
# Provider options: "console" (local development) or "s3" (AWS S3 or compatible)
STORAGE_PROVIDER="console"

# Console Storage (Local Development)
# Directory where uploaded files are stored locally
UPLOAD_DIR="./uploads"
# Base URL for serving uploaded files
UPLOAD_BASE_URL="http://localhost:3000/uploads"

# AWS S3 Storage Configuration (Production)
# S3 bucket name for file storage
AWS_S3_BUCKET="your-bucket-name"
# AWS Region for S3 (if different from SES region)
AWS_REGION="us-east-1"
# Optional: Custom public URL for S3 files (e.g., CloudFront distribution)
AWS_S3_PUBLIC_URL="https://cdn.yourdomain.com"
# Note: AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY are already defined above for SES
